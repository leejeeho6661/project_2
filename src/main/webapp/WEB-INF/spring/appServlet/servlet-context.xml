<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/**" location="/resources/" />

	<!-- css -->
	<resources mapping="/css/**" location="/resources/css/" />
	
	<!-- javascript -->
	<resources mapping="/js/**" location="/resources/js/" />
	
	<!-- img -->
	<resources mapping="/img/**" location="/resources/img/" />
	
	<!-- article-img -->
	<resources mapping="/article_img/**" location="/resources/article_img/" />
	
	<!-- board-img -->
	<resources mapping="/board_img/**" location="/resources/board_img/" />
	<!-- file upload 
    <resources mapping="/upload/**" location="file:///d:/CJH_JAVA/works/egov/project/src/main/webapp/resources/article_img/" />
	-->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	 <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> 
	
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo" />
		<websocket:sockjs />
	</websocket:handlers>
    
	<beans:bean id="echoHandler" class="com.javateam.project.controller.EchoHandler"></beans:bean>
	
	<beans:bean id="naverLoginBO" class="com.javateam.project.service.NaverLoginBO" />	
	<!-- <beans:bean id="contentNegotiationManager"
            class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
       
        <beans:property name="defaultContentType" value="application/json" />
        <beans:property name="defaultContentType" value="text/html" />
     
        사용할 front media contentType 지정
        <beans:property name="mediaTypes">
            <beans:map>
              <beans:entry key="html" value="text/html"/>
              <beans:entry key="json" value="application/json"/>
            </beans:map>
        </beans:property>
       
    </beans:bean>
 
    <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
         
        <beans:property name="contentNegotiationManager" ref="contentNegotiationManager"/>
           
        <beans:property name="viewResolvers">
            <beans:list>
              <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
              <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                  <beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
                  <beans:property name="prefix" value="/WEB-INF/views/"/>
                  <beans:property name="suffix" value=".jsp"/>
                  <beans:property name="order" value="1" />
              </beans:bean>
            </beans:list>
        </beans:property>
     
        <beans:property name="defaultViews">
            <beans:list>
              <beans:bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
            </beans:list>
        </beans:property>
     
    </beans:bean>
	 -->
	<!-- controller -->
	<context:component-scan base-package="com.javateam.project.controller" />
	
	<!-- service -->
	<context:component-scan base-package="com.javateam.project.service" />
	
	<!-- dao -->
	<context:component-scan base-package="com.javateam.project.dao" />
	
	<!-- domain -->
	<context:component-scan base-package="com.javateam.project.domain" />
	
	<!-- typehandler -->
	<context:component-scan base-package="com.javateam.project.typehandler" />
	
	<!-- mapper -->
	<context:component-scan base-package="com.javateam.project.mapper" />
	
	
	
</beans:beans>
